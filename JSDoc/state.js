/**
 * @typedef {'high' | 'medium'| 'low'} Urgency - The priority that the tasks
 * should take in terms of how quickly it should be completed
 *  * @typedef {'recent' | 'oldest'| 'upcoming'} Sorting - one of three possible
 *    predefined ordering approaches that task can be shown in.`recent` arranges based on the tasks that were created closest to the current date, `oldest` does the opposite, and `upcoming` arranges based on the closest due date (if no due date it will be placed last)
 */

/**
 * Created a unique ID to be used in the app. Value is created by combining tow
 * randomized numbers with the current timestamp. The values are divided by
 * dashes (-) in order to ensure that the value is treated as a string(and not a
 * number)
 *
 * @returns {string}
 */
const createdId=() =>{

}

/** 
 * @typedef {object} Task - An oject representing a task to be shown to a user
 * @prop {string} id - A unique value generated by {@link createdId} used to
 * identify a task
 * @prop {string} title - A short user- provided description of what the task
 * entails
 * @prop {boolean} completed - whether the task has been been completed or not
 * @prop {date}created- The exact date when the task was created in the system
 * @prop {date} due - A user specified date for when the task should be
 * completed
 * @prop {'high'|'medium' | 'low'} urgency - A user specified indications of how
 * important the task
 */

/**
 * @typedef {object}Filters - User configured filter values that control what tasks are shown.
 * @prop {string} search - A freeform string of characters tha is matched against a task title.
 * @prop {Urgency |'any'} urgency - Only shows tasks matching the value.`any` shows all tasks.
 * @prop {Sorting} sorting - Determines the order in which tasks are displayed.
 */

/**
 * @typedef {object} State - All data associated with the specific instance of the app
 * @prop {Record<string, Task>} tasks - A list of all tasks that should be shown.
 * @prop {Array<string>}displaying- `id` value to task that should be shown.
 * @prop {Filters}Filter -  An object containing the current filter state of tasks.
 */

/**
 * @typedef {State} 
 */
export const state = {
    tasks:{},
    displaying:[],

    filters:{
        search:"",
        sorting:"recent",
        urgency: "any",
    },
};